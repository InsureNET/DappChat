{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/SingleTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\n\nconst getData = async (address, index) => {\n  //Looks up accounts and pulls the first one\n  // const accounts = await drizzle.web3.eth.getAccounts();\n  // const latestTweet = await drizzle.contracts.Twittor.methods\n  //   .getNumTweets(accounts[0])\n  //   .call();\n  const result = await drizzle.contracts.Twittor.methods.getEverythingTweetStruct(address, index).call(); // console.log(result, 'RESULT');\n\n  return result;\n};\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index) => {\n      //Looks up accounts and pulls the first one\n      // const accounts = await drizzle.web3.eth.getAccounts();\n      // const latestTweet = await drizzle.contracts.Twittor.methods\n      //   .getNumTweets(accounts[0])\n      //   .call();\n      const result = await drizzle.contracts.Twittor.methods.getEverythingTweetStruct(address, index).call();\n      return result;\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  // const { address, index } = props;\n  // const tweet = getData(address, index);\n  // const { text, blockNum, replies } = tweet;\n  // console.log(props, 'PROPS');\n  render() {\n    console.log(this.state, 'STATE');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Single\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/SingleTweet.js"],"names":["React","Drizzle","options","drizzle","getData","address","index","result","contracts","Twittor","methods","getEverythingTweetStruct","call","SingleTweet","Component","constructor","props","state","componentDidMount","tweetData","setState","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAYC,OAAZ,CAAhB;;AACA,MAAME,OAAO,GAAG,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AACxC;AACA;AACA;AACA;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMJ,OAAO,CAACK,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBC,wBADkB,CACON,OADP,EACgBC,KADhB,EAElBM,IAFkB,EAArB,CAPwC,CAUxC;;AACA,SAAOL,MAAP;AACD,CAZD;;AAcA,eAAe,MAAMM,WAAN,SAA0Bb,KAAK,CAACc,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAWnBZ,OAXmB,GAWT,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AAClC;AACA;AACA;AACA;AACA;AAEA,YAAMC,MAAM,GAAG,MAAMJ,OAAO,CAACK,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBC,wBADkB,CACON,OADP,EACgBC,KADhB,EAElBM,IAFkB,EAArB;AAGA,aAAOL,MAAP;AACD,KAtBkB;;AAGjB,SAAKU,KAAL,GAAa,EAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxB;AACA,UAAMC,SAAS,GAAG,MAAM,KAAKf,OAAL,CAAa,KAAKY,KAAL,CAAWX,OAAxB,EAAiC,KAAKW,KAAL,CAAWV,KAA5C,CAAxB;AACA,SAAKc,QAAL,CAAcD,SAAd;AACD;;AAeD;AACA;AACA;AACA;AACAE,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EAAwB,OAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF;AASD;;AAxCsD","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\n\nconst drizzle = new Drizzle(options);\nconst getData = async (address, index) => {\n  //Looks up accounts and pulls the first one\n  // const accounts = await drizzle.web3.eth.getAccounts();\n  // const latestTweet = await drizzle.contracts.Twittor.methods\n  //   .getNumTweets(accounts[0])\n  //   .call();\n\n  const result = await drizzle.contracts.Twittor.methods\n    .getEverythingTweetStruct(address, index)\n    .call();\n  // console.log(result, 'RESULT');\n  return result;\n};\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {};\n  }\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  getData = async (address, index) => {\n    //Looks up accounts and pulls the first one\n    // const accounts = await drizzle.web3.eth.getAccounts();\n    // const latestTweet = await drizzle.contracts.Twittor.methods\n    //   .getNumTweets(accounts[0])\n    //   .call();\n\n    const result = await drizzle.contracts.Twittor.methods\n      .getEverythingTweetStruct(address, index)\n      .call();\n    return result;\n  };\n\n  // const { address, index } = props;\n  // const tweet = getData(address, index);\n  // const { text, blockNum, replies } = tweet;\n  // console.log(props, 'PROPS');\n  render() {\n    console.log(this.state, 'STATE');\n    return (\n      <div>\n        <h1>Single</h1>\n        {/* <p>Address: {address}</p>\n      <p>Block Num: {blockNum}</p>\n      <p>Replies: {replies}</p>\n      <p>Tweet: {text}</p> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}