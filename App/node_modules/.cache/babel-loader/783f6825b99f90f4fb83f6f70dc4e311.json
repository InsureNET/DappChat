{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/SingleTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\n\nconst getData = async (address, index) => {\n  //Looks up accounts and pulls the first one\n  // const accounts = await drizzle.web3.eth.getAccounts();\n  // const latestTweet = await drizzle.contracts.Twittor.methods\n  //   .getNumTweets(accounts[0])\n  //   .call();\n  return await drizzle.contracts.Twittor.methods.getEverythingTweetStruct(address, index).call(); // console.log(result, 'RESULT');\n};\n\nconst SingleTweet = props => {\n  const address = props.address,\n        index = props.index;\n  const tweet = getData(address, index);\n  const text = tweet.text,\n        blockNum = tweet.blockNum,\n        replies = tweet.replies;\n  console.log(tweet);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Address: \", address), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Block Num: \", blockNum), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Replies: \", replies), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Tweet: \", text));\n};\n\nexport default SingleTweet;","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/SingleTweet.js"],"names":["React","Drizzle","options","drizzle","getData","address","index","contracts","Twittor","methods","getEverythingTweetStruct","call","SingleTweet","props","tweet","text","blockNum","replies","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAYC,OAAZ,CAAhB;;AACA,MAAME,OAAO,GAAG,OAAOC,OAAP,EAAgBC,KAAhB,KAA0B;AACxC;AACA;AACA;AACA;AACA;AAEA,SAAO,MAAMH,OAAO,CAACI,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CACVC,wBADU,CACeL,OADf,EACwBC,KADxB,EAEVK,IAFU,EAAb,CAPwC,CAUxC;AACD,CAXD;;AAaA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,QACnBR,OADmB,GACAQ,KADA,CACnBR,OADmB;AAAA,QACVC,KADU,GACAO,KADA,CACVP,KADU;AAE3B,QAAMQ,KAAK,GAAGV,OAAO,CAACC,OAAD,EAAUC,KAAV,CAArB;AAF2B,QAGnBS,IAHmB,GAGSD,KAHT,CAGnBC,IAHmB;AAAA,QAGbC,QAHa,GAGSF,KAHT,CAGbE,QAHa;AAAA,QAGHC,OAHG,GAGSH,KAHT,CAGHG,OAHG;AAI3BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaT,OAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeW,QAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaC,OAAb,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWF,IAAX,CAJF,CADF;AAQD,CAbD;;AAeA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\n\nconst drizzle = new Drizzle(options);\nconst getData = async (address, index) => {\n  //Looks up accounts and pulls the first one\n  // const accounts = await drizzle.web3.eth.getAccounts();\n  // const latestTweet = await drizzle.contracts.Twittor.methods\n  //   .getNumTweets(accounts[0])\n  //   .call();\n\n  return await drizzle.contracts.Twittor.methods\n    .getEverythingTweetStruct(address, index)\n    .call();\n  // console.log(result, 'RESULT');\n};\n\nconst SingleTweet = props => {\n  const { address, index } = props;\n  const tweet = getData(address, index);\n  const { text, blockNum, replies } = tweet;\n  console.log(tweet);\n  return (\n    <div>\n      <p>Address: {address}</p>\n      <p>Block Num: {blockNum}</p>\n      <p>Replies: {replies}</p>\n      <p>Tweet: {text}</p>\n    </div>\n  );\n};\n\nexport default SingleTweet;\n"]},"metadata":{},"sourceType":"module"}