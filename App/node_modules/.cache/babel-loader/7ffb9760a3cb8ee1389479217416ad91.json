{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/drizzletest/Twittor/App/src/SingleTweet.js\";\nimport React from 'react';\nimport ReplyTweet from './ReplyTweet';\nimport { toast, Flip } from 'react-toastify';\nimport { Button, Form, Message, Accordion, AccordionContent, AccordionTitle, Icon } from 'semantic-ui-react';\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index) => {\n      const result = await this.props.drizzle.contracts.Twittor.methods.getEverythingTweetStruct(address, index).call();\n      return result;\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        reply: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      toast.info('Processing reply...', {\n        position: 'top-right',\n        autoClose: 10000,\n        transition: Flip\n      });\n\n      try {\n        await this.props.drizzle.contracts.Twittor.methods.addReply(this.props.address, this.props.index, this.state.reply).send({\n          from: this.props.address\n        });\n      } catch (error) {\n        toast.dismiss();\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleClick = (e, titleProps) => {\n      const index = titleProps.index;\n      const activeIndex = this.state.activeIndex;\n      const newIndex = activeIndex === index ? -1 : index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    };\n\n    this.state = {\n      reply: '',\n      activeIndex: false,\n      loading: false,\n      errorMessage: '',\n      displayReply: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.drizzle.contracts.Twittor.methods.getNumReplies.cacheCall(this.props.address, this.props.index);\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  render() {\n    const drizzleState = this.props.drizzleState;\n    let length = 0;\n    let identifier; //Gets list of all single tweet keys\n\n    const keys = Object.keys(drizzleState.contracts.Twittor.getNumReplies); //Searches through the getNumReply arguments, matches the index, and saves indentifier\n\n    if (keys.length) {\n      for (let i = 0; i < keys.length; i++) {\n        if (drizzleState.contracts.Twittor.getNumReplies[keys[i]].args[1] === this.props.index) {\n          identifier = keys[i];\n          break;\n        }\n      } //Finds the newly updated num replies\n\n\n      if (identifier) {\n        length = drizzleState.contracts.Twittor.getNumReplies[identifier].value;\n      }\n    }\n\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    const displayReply = this.state.displayReply;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Single\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Address: \", this.props.address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Block Num: \", this.state[2]), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Tweet: \", this.state[0]), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Replies: \", length), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      fluid: true,\n      styled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      error: !!this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: \"reply\",\n      name: \"reply\",\n      value: this.state.reply,\n      placeholder: \"reply\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(Button, {\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Reply\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(AccordionTitle, {\n      active: displayReply,\n      onClick: () => {\n        this.setState({\n          displayReply: !displayReply\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), \"Replies\"), mapArray.map((tweet, idx) => {\n      return React.createElement(AccordionContent, {\n        active: displayReply,\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ReplyTweet, {\n        address: this.props.address,\n        index: this.props.index,\n        replyIndex: idx,\n        drizzle: this.props.drizzle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }));\n    }).reverse(), React.createElement(AccordionContent, {\n      active: displayReply && mapArray.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"No replies yet\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/SingleTweet.js"],"names":["React","ReplyTweet","toast","Flip","Button","Form","Message","Accordion","AccordionContent","AccordionTitle","Icon","SingleTweet","Component","constructor","props","getData","address","index","result","drizzle","contracts","Twittor","methods","getEverythingTweetStruct","call","handleInputChange","event","setState","reply","target","value","handleSubmit","preventDefault","loading","info","position","autoClose","transition","addReply","state","send","from","error","dismiss","errorMessage","message","handleClick","e","titleProps","activeIndex","newIndex","displayReply","componentDidMount","getNumReplies","cacheCall","tweetData","render","drizzleState","length","identifier","keys","Object","i","args","mapArray","fill","map","tweet","idx","reverse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReplyTweet from './ReplyTweet';\nimport { toast, Flip } from 'react-toastify';\nimport {\n  Button,\n  Form,\n  Message,\n  Accordion,\n  AccordionContent,\n  AccordionTitle,\n  Icon,\n} from 'semantic-ui-react';\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      reply: '',\n      activeIndex: false,\n      loading: false,\n      errorMessage: '',\n      displayReply: false,\n    };\n  }\n  async componentDidMount() {\n    await this.props.drizzle.contracts.Twittor.methods.getNumReplies.cacheCall(\n      this.props.address,\n      this.props.index\n    );\n\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  getData = async (address, index) => {\n    const result = await this.props.drizzle.contracts.Twittor.methods\n      .getEverythingTweetStruct(address, index)\n      .call();\n    return result;\n  };\n\n  handleInputChange = event => {\n    this.setState({\n      reply: event.target.value,\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    toast.info('Processing reply...', {\n      position: 'top-right',\n      autoClose: 10000,\n      transition: Flip,\n    });\n\n    try {\n      await this.props.drizzle.contracts.Twittor.methods\n        .addReply(this.props.address, this.props.index, this.state.reply)\n        .send({ from: this.props.address });\n    } catch (error) {\n      toast.dismiss();\n      this.setState({ errorMessage: error.message });\n    }\n    this.setState({ loading: false });\n  };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { drizzleState } = this.props;\n    let length = 0;\n    let identifier;\n\n    //Gets list of all single tweet keys\n    const keys = Object.keys(drizzleState.contracts.Twittor.getNumReplies);\n\n    //Searches through the getNumReply arguments, matches the index, and saves indentifier\n    if (keys.length) {\n      for (let i = 0; i < keys.length; i++) {\n        if (\n          drizzleState.contracts.Twittor.getNumReplies[keys[i]].args[1] ===\n          this.props.index\n        ) {\n          identifier = keys[i];\n          break;\n        }\n      }\n\n      //Finds the newly updated num replies\n      if (identifier) {\n        length = drizzleState.contracts.Twittor.getNumReplies[identifier].value;\n      }\n    }\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    const { displayReply } = this.state;\n    return (\n      <div>\n        <h1>Single</h1>\n        <p>Address: {this.props.address}</p>\n        <p>Block Num: {this.state[2]}</p>\n        <p>Tweet: {this.state[0]}</p>\n\n        <p>Replies: {length}</p>\n\n        <div>\n          <Accordion fluid styled>\n            <div>\n              <Form\n                onSubmit={this.handleSubmit}\n                error={!!this.state.errorMessage}\n              >\n                <input\n                  key=\"reply\"\n                  name=\"reply\"\n                  value={this.state.reply}\n                  placeholder=\"reply\"\n                  onChange={this.handleInputChange}\n                />\n                <Message\n                  error\n                  header=\"Oops!\"\n                  content={this.state.errorMessage}\n                />\n\n                <Button loading={this.state.loading}>Reply</Button>\n              </Form>\n              <div>\n                <AccordionTitle\n                  active={displayReply}\n                  onClick={() => {\n                    this.setState({\n                      displayReply: !displayReply,\n                    });\n                  }}\n                >\n                  <Icon name=\"dropdown\" />\n                  Replies\n                </AccordionTitle>\n\n                {mapArray\n                  .map((tweet, idx) => {\n                    return (\n                      <AccordionContent active={displayReply} key={idx}>\n                        <ReplyTweet\n                          address={this.props.address}\n                          index={this.props.index}\n                          replyIndex={idx}\n                          drizzle={this.props.drizzle}\n                        />\n                      </AccordionContent>\n                    );\n                  })\n                  .reverse()}\n                <AccordionContent\n                  active={displayReply && mapArray.length === 0}\n                >\n                  <h2>No replies yet</h2>\n                </AccordionContent>\n              </div>\n            </div>\n          </Accordion>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}