{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/drizzletest/Twittor/App/src/App.js\";\n// import React from 'react';\n// // import logo from './logo.svg';\n// import './App.css';\n// // import web3 from './web3';\n// // import twittor from './twittor';\n// import { DrizzleProvider } from \"drizzle-react\";\n// import { LoadingContainer } from \"drizzle-react-components\";\n// import {Drizzle, generateStore} from 'drizzle'\n// import { DrizzleContext } from \"drizzle-react\";\n// import \"./App.css\";\n// import Migrations from \"./contracts/Migrations.json\";\n// import Twittor from \"./contracts/Twittor.json\";\n// import drizzleOptions from \"./drizzleOptions\";\n// import MyContainer from \"./MyContainer\";\n// import store from './middleware'\n// const options = {contracts: [Migrations, Twittor]};\n// const drizzleStore = generateStore(options);\n// const drizzle = new Drizzle(options, drizzleStore);\n// class App extends React.Component {\n// constructor() {\n//   super();\n//   this.state ={\n//     tweets: [],\n//     newTweet: '',\n//   }\n// }\n// async componentDidMount() {\n//   try {\n//     const accounts = await web3.eth.getAccounts()\n//     const tweets = await twittor.methods.fetchUserTweets(accounts[0]).call();\n//     if(tweets !== null ){\n//     this.setState({tweets});\n//     }\n//   } catch (err) {\n//     console.log(err)\n//   }\n// }\n// handleChange = (evt) => {\n//   this.setState({\n//     [evt.target.name]: evt.target.value\n//   })\n// }\n// handleTweet = async (evt) => {\n//   try {\n//     evt.preventDefault();\n//     //get current account logged in\n//     const accounts = await web3.eth.getAccounts()\n//     //send tweet out\n//     await twittor.methods.setMessage(this.state.newTweet)\n//       .send({from: accounts[0]})\n//       .on('transactionHash', function(hash){\n//         console.log(hash);\n// })\n//   } catch (err) {\n//     console.log(err)\n//   }\n// }\n// render() {\n//   const tweets = this.state.tweets;\n//   return (\n//     <div className=\"App\">\n//       <input\n//         name = \"newTweet\"\n//         type = \"text\"\n//         value = {this.state.newTweet}\n//         onChange = {this.handleChange}\n//       />\n//       <button\n//         type = \"button\"\n//         onClick = {this.handleTweet}\n//       > TWEET</button>\n//       <h1> {this.state.message}</h1>\n//       <div className = 'allTweets'>\n//         <h1>TWEETS</h1>\n//         {tweets.map(tweet => {\n//           return(\n//           <div className = 'singleTweet'>{tweet}</div>\n//           )\n//         })}\n//       </div>\n//     </div>\n//   );\n// }\n//   render() {\n//     return (\n//       <DrizzleProvider store={store} options={drizzleOptions}>\n//         <LoadingContainer>\n//           <MyContainer />\n//         </LoadingContainer>\n//       </DrizzleProvider>\n//     );\n//   }\n// }\n// export default App;\nimport MyComponent from './MyComponent';\nimport React from \"react\";\nimport { DrizzleContext } from \"drizzle-react\";\nimport TweetForm from './TweetForm';\nexport default (() => React.createElement(DrizzleContext.Consumer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, drizzleContext => {\n  const drizzle = drizzleContext.drizzle,\n        drizzleState = drizzleContext.drizzleState,\n        initialized = drizzleContext.initialized;\n\n  if (!initialized) {\n    return \"Loading...\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(MyComponent, {\n    drizzle: drizzle,\n    drizzleState: drizzleState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }));\n}));","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/App.js"],"names":["MyComponent","React","DrizzleContext","TweetForm","drizzleContext","drizzle","drizzleState","initialized"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,gBAAe,MACb,oBAAC,cAAD,CAAgB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,cAAc,IAAI;AAAA,QACTC,OADS,GAC8BD,cAD9B,CACTC,OADS;AAAA,QACAC,YADA,GAC8BF,cAD9B,CACAE,YADA;AAAA,QACcC,WADd,GAC8BH,cAD9B,CACcG,WADd;;AAGjB,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,YAAP;AACD;;AACD,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,OAAtB;AAA+B,IAAA,YAAY,EAAEC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CADA;AAMD,CAbH,CADF","sourcesContent":["// import React from 'react';\n// // import logo from './logo.svg';\n// import './App.css';\n// // import web3 from './web3';\n// // import twittor from './twittor';\n\n// import { DrizzleProvider } from \"drizzle-react\";\n// import { LoadingContainer } from \"drizzle-react-components\";\n// import {Drizzle, generateStore} from 'drizzle'\n// import { DrizzleContext } from \"drizzle-react\";\n// import \"./App.css\";\n\n// import Migrations from \"./contracts/Migrations.json\";\n// import Twittor from \"./contracts/Twittor.json\";\n\n// import drizzleOptions from \"./drizzleOptions\";\n// import MyContainer from \"./MyContainer\";\n// import store from './middleware'\n// const options = {contracts: [Migrations, Twittor]};\n// const drizzleStore = generateStore(options);\n// const drizzle = new Drizzle(options, drizzleStore);\n\n\n\n\n// class App extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.state ={\n  //     tweets: [],\n  //     newTweet: '',\n  //   }\n  // }\n\n  // async componentDidMount() {\n  //   try {\n  //     const accounts = await web3.eth.getAccounts()\n  //     const tweets = await twittor.methods.fetchUserTweets(accounts[0]).call();\n  //     if(tweets !== null ){\n  //     this.setState({tweets});\n\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n   \n  // }\n\n  // handleChange = (evt) => {\n  //   this.setState({\n  //     [evt.target.name]: evt.target.value\n  //   })\n  // }\n\n  // handleTweet = async (evt) => {\n  //   try {\n  //     evt.preventDefault();\n  //     //get current account logged in\n  //     const accounts = await web3.eth.getAccounts()\n  //     //send tweet out\n  //     await twittor.methods.setMessage(this.state.newTweet)\n  //       .send({from: accounts[0]})\n  //       .on('transactionHash', function(hash){\n  //         console.log(hash);\n  // })\n      \n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n    \n  // }\n\n\n  // render() {\n  //   const tweets = this.state.tweets;\n  //   return (\n  //     <div className=\"App\">\n  //       <input\n  //         name = \"newTweet\"\n  //         type = \"text\"\n  //         value = {this.state.newTweet}\n  //         onChange = {this.handleChange}\n  //       />\n  //       <button\n  //         type = \"button\"\n  //         onClick = {this.handleTweet}\n  //       > TWEET</button>\n  //       <h1> {this.state.message}</h1>\n  //       <div className = 'allTweets'>\n  //         <h1>TWEETS</h1>\n  //         {tweets.map(tweet => {\n  //           return(\n  //           <div className = 'singleTweet'>{tweet}</div>\n  //           )\n  //         })}\n  //       </div>\n  //     </div>\n  //   );\n  // }\n \n//   render() {\n//     return (\n//       <DrizzleProvider store={store} options={drizzleOptions}>\n//         <LoadingContainer>\n//           <MyContainer />\n//         </LoadingContainer>\n//       </DrizzleProvider>\n//     );\n//   }\n// }\n\n\n\n// export default App;\n\n\nimport MyComponent from './MyComponent'\nimport React from \"react\";\nimport { DrizzleContext } from \"drizzle-react\";\nimport TweetForm from './TweetForm';\n\nexport default () => (\n  <DrizzleContext.Consumer>\n    {drizzleContext => {\n      const { drizzle, drizzleState, initialized } = drizzleContext;\n  \n      if (!initialized) {\n        return \"Loading...\";\n      }\n      return (\n      <div>\n              <MyComponent drizzle={drizzle} drizzleState={drizzleState} />\n      </div>\n\n      );\n    }}\n  </DrizzleContext.Consumer>\n)"]},"metadata":{},"sourceType":"module"}