{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/drizzletest/Twittor/App/src/SingleTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyTweet from './ReplyTweet';\nconst drizzle = new Drizzle(options);\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index) => {\n      const result = await drizzle.contracts.Twittor.methods.getEverythingTweetStruct(address, index).call();\n      return result;\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  render() {\n    const drizzleState = this.props.drizzleState;\n    let length = 0;\n    const key = Object.keys(drizzleState.contracts.Twittor.getNumTweets)[0];\n\n    if (drizzleState.contracts.Twittor.getNumTweets[key]) {\n      length = drizzleState.contracts.Twittor.getNumTweets[key].value;\n    }\n\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    console.log(this.props.drizzle);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Single\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Address: \", this.props.address), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Block Num: \", this.state[2]), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Replies: \", this.state[3]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        displayReply: !this.state.displayReply\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Reply\"), this.state.displayReply ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, length ? mapArray.map((tweet, idx) => {\n      return React.createElement(ReplyTweet, {\n        address: this.props.address,\n        index: this.props.index,\n        replyIndex: idx,\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }).reverse() : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Length is false\")) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"False\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Tweet: \", this.state[0]));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/SingleTweet.js"],"names":["React","Drizzle","options","ReplyTweet","drizzle","SingleTweet","Component","constructor","props","getData","address","index","result","contracts","Twittor","methods","getEverythingTweetStruct","call","state","componentDidMount","tweetData","setState","render","drizzleState","length","key","Object","keys","getNumTweets","value","mapArray","fill","console","log","displayReply","map","tweet","idx","reverse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport ReplyTweet from './ReplyTweet';\n\nconst drizzle = new Drizzle(options);\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {};\n  }\n  async componentDidMount() {\n    // call the func here\n    const tweetData = await this.getData(this.props.address, this.props.index);\n    this.setState(tweetData);\n  }\n\n  getData = async (address, index) => {\n    const result = await drizzle.contracts.Twittor.methods\n      .getEverythingTweetStruct(address, index)\n      .call();\n    return result;\n  };\n\n  render() {\n    const { drizzleState } = this.props;\n    let length = 0;\n\n    const key = Object.keys(drizzleState.contracts.Twittor.getNumTweets)[0];\n\n    if (drizzleState.contracts.Twittor.getNumTweets[key]) {\n      length = drizzleState.contracts.Twittor.getNumTweets[key].value;\n    }\n\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    console.log(this.props.drizzle);\n    return (\n      <div>\n        <h1>Single</h1>\n        <p>Address: {this.props.address}</p>\n        <p>Block Num: {this.state[2]}</p>\n        <p>Replies: {this.state[3]}</p>\n\n        <div>\n          <button\n            onClick={() =>\n              this.setState({ displayReply: !this.state.displayReply })\n            }\n          >\n            Reply\n          </button>\n          {this.state.displayReply ? (\n            <div>\n              {length ? (\n                mapArray\n                  .map((tweet, idx) => {\n                    return (\n                      <ReplyTweet\n                        address={this.props.address}\n                        index={this.props.index}\n                        replyIndex={idx}\n                        key={idx}\n                      />\n                    );\n                  })\n                  .reverse()\n              ) : (\n                <h2>Length is false</h2>\n              )}\n            </div>\n          ) : (\n            <h1>False</h1>\n          )}\n        </div>\n\n        <p>Tweet: {this.state[0]}</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}