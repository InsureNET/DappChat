{"ast":null,"code":"import { toast } from 'react-toastify';\nimport { generateStore } from 'drizzle';\nimport drizzleOptions from '../drizzleOptions';\n\nconst contractEventNotifier = store => next => action => {\n  if (action.type === 'BLOCK_RECEIVED') {\n    toast.dismiss();\n    toast.success('Tweet sent! ✔️', {\n      autoclose: 5000\n    });\n  }\n\n  return next(action);\n};\n\nconst appMiddlewares = [contractEventNotifier];\nconst store = generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false // enable ReduxDevTools!\n\n}); // Use the store with DrizzleProvider\n\nexport default store;","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/middleware/index.js"],"names":["toast","generateStore","drizzleOptions","contractEventNotifier","store","next","action","type","dismiss","success","autoclose","appMiddlewares","disableReduxDevTools"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,qBAAqB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpCP,IAAAA,KAAK,CAACQ,OAAN;AACAR,IAAAA,KAAK,CAACS,OAAN,CAAc,gBAAd,EAAgC;AAC9BC,MAAAA,SAAS,EAAE;AADmB,KAAhC;AAGD;;AACD,SAAOL,IAAI,CAACC,MAAD,CAAX;AACD,CARD;;AAUA,MAAMK,cAAc,GAAG,CAACR,qBAAD,CAAvB;AAEA,MAAMC,KAAK,GAAGH,aAAa,CAAC;AAC1BC,EAAAA,cAD0B;AAE1BS,EAAAA,cAF0B;AAG1BC,EAAAA,oBAAoB,EAAE,KAHI,CAGG;;AAHH,CAAD,CAA3B,C,CAMA;;AACA,eAAeR,KAAf","sourcesContent":["import { toast } from 'react-toastify';\nimport { generateStore } from 'drizzle';\nimport drizzleOptions from '../drizzleOptions';\n\nconst contractEventNotifier = store => next => action => {\n  if (action.type === 'BLOCK_RECEIVED') {\n    toast.dismiss();\n    toast.success('Tweet sent! ✔️', {\n      autoclose: 5000,\n    });\n  }\n  return next(action);\n};\n\nconst appMiddlewares = [contractEventNotifier];\n\nconst store = generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false, // enable ReduxDevTools!\n});\n\n// Use the store with DrizzleProvider\nexport default store;\n"]},"metadata":{},"sourceType":"module"}