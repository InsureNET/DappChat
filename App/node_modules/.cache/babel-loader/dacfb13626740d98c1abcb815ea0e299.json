{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/MyComponent.js\";\nimport React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nexport default class tweets extends React.Component {\n  render() {\n    let length = 0;\n    const userAddress = this.props.accounts[0];\n    const getNumTweetsFirstKey = Object.keys(this.props.Twittor.getNumTweets)[0];\n\n    if (this.props.Twittor.getNumTweets[getNumTweetsFirstKey]) {\n      length = this.props.Twittor.getNumTweets[getNumTweetsFirstKey].value;\n    }\n\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Test\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"TWEETS\"), React.createElement(TweetForm, {\n      contract: \"Twittor\",\n      method: \"addTweetStruct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"allTweets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, mapArray.map((tweet, idx) => {\n      return React.createElement(SingleTweet, {\n        address: userAddress,\n        index: idx,\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }).reverse()), React.createElement(\"div\", {\n      className: \"hide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ContractData, {\n      contract: \"Twittor\",\n      method: \"getNumTweets\",\n      methodArgs: [userAddress],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/MyComponent.js"],"names":["React","ToastContainer","ContractData","TweetForm","SingleTweet","tweets","Component","render","length","userAddress","props","accounts","getNumTweetsFirstKey","Object","keys","Twittor","getNumTweets","value","mapArray","fill","map","tweet","idx","reverse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAClDC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,CAAb;AACA,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAApB;AACA,UAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAC3B,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,YADQ,EAE3B,CAF2B,CAA7B;;AAGA,QAAI,KAAKN,KAAL,CAAWK,OAAX,CAAmBC,YAAnB,CAAgCJ,oBAAhC,CAAJ,EAA2D;AACzDJ,MAAAA,MAAM,GAAG,KAAKE,KAAL,CAAWK,OAAX,CAAmBC,YAAnB,CAAgCJ,oBAAhC,EAAsDK,KAA/D;AACD;;AACD,QAAIC,QAAQ,GAAG,EAAf;;AACA,QAAIV,MAAJ,EAAY;AACVU,MAAAA,QAAQ,CAACV,MAAT,GAAkBA,MAAlB;AACAU,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAAd;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,SAApB;AAA8B,MAAA,MAAM,EAAC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CACNE,GADF,CACM,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnB,aACE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEb,WAAtB;AAAmC,QAAA,KAAK,EAAEa,GAA1C;AAA+C,QAAA,GAAG,EAAEA,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KALF,EAMEC,OANF,EADH,CAJF,EAaE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,SADX;AAEE,MAAA,MAAM,EAAC,cAFT;AAGE,MAAA,UAAU,EAAE,CAACd,WAAD,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAbF,CAHF,CADF;AA6BD;;AA7CiD","sourcesContent":["import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\n\nexport default class tweets extends React.Component {\n  render() {\n    let length = 0;\n    const userAddress = this.props.accounts[0];\n    const getNumTweetsFirstKey = Object.keys(\n      this.props.Twittor.getNumTweets\n    )[0];\n    if (this.props.Twittor.getNumTweets[getNumTweetsFirstKey]) {\n      length = this.props.Twittor.getNumTweets[getNumTweetsFirstKey].value;\n    }\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    return (\n      <div className=\"App\">\n        <ToastContainer />\n\n        <div>\n          <h1>Test</h1>\n          <h1>TWEETS</h1>\n          <TweetForm contract=\"Twittor\" method=\"addTweetStruct\" />\n          <div className=\"allTweets\">\n            {mapArray\n              .map((tweet, idx) => {\n                return (\n                  <SingleTweet address={userAddress} index={idx} key={idx} />\n                );\n              })\n              .reverse()}\n          </div>\n          <div className=\"hide\">\n            {\n              <ContractData\n                contract=\"Twittor\"\n                method=\"getNumTweets\"\n                methodArgs={[userAddress]}\n              />\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}