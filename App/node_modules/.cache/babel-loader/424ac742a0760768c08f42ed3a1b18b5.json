{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/drizzletest/Twittor/App/src/ReplyTweet.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index, replyIndex) => {\n      const result = await drizzle.contracts.Twittor.methods.getReply(address, index, replyIndex).call();\n      return result;\n    };\n\n    this.state = {\n      tweetData: ''\n    };\n  }\n\n  async componentDidMount() {\n    const tweetData = await this.getData(this.props.address, this.props.index, this.props.replyIndex);\n    this.setState({\n      tweetData\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Reply\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Reply:\", this.state.tweetData));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/ReplyTweet.js"],"names":["React","Drizzle","options","drizzle","SingleTweet","Component","constructor","props","getData","address","index","replyIndex","result","contracts","Twittor","methods","getReply","call","state","tweetData","componentDidMount","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAYC,OAAZ,CAAhB;AAEA,eAAe,MAAME,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;;AADiB,SAanBC,OAbmB,GAaT,OAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,UAAvB,KAAsC;AAC9C,YAAMC,MAAM,GAAG,MAAMT,OAAO,CAACU,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBC,QADkB,CACTP,OADS,EACAC,KADA,EACOC,UADP,EAElBM,IAFkB,EAArB;AAGA,aAAOL,MAAP;AACD,KAlBkB;;AAEjB,SAAKM,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxB,UAAMD,SAAS,GAAG,MAAM,KAAKX,OAAL,CACtB,KAAKD,KAAL,CAAWE,OADW,EAEtB,KAAKF,KAAL,CAAWG,KAFW,EAGtB,KAAKH,KAAL,CAAWI,UAHW,CAAxB;AAKA,SAAKU,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACD;;AASDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKJ,KAAL,CAAWC,SAArB,CAFF,CADF;AAMD;;AA5BsD","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\n\nconst drizzle = new Drizzle(options);\n\nexport default class SingleTweet extends React.Component {\n  constructor(props) {\n    super();\n    this.state = { tweetData: '' };\n  }\n  async componentDidMount() {\n    const tweetData = await this.getData(\n      this.props.address,\n      this.props.index,\n      this.props.replyIndex\n    );\n    this.setState({ tweetData });\n  }\n\n  getData = async (address, index, replyIndex) => {\n    const result = await drizzle.contracts.Twittor.methods\n      .getReply(address, index, replyIndex)\n      .call();\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Reply</h1>\n        <p>Reply:{this.state.tweetData}</p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}