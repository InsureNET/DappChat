{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/NewComponent.js\";\nimport React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\n\nconst getData = async () => {\n  const accounts = await drizzle.web3.eth.getAccounts();\n  console.log(accounts[0], 'accounts');\n  const latestTweet = await drizzle.contracts.Twittor.methods.getNumTweets(accounts[0]).call();\n  const result = await drizzle.contracts.Twittor.methods.getEverythingTweetStruct(accounts[0], latestTweet - 1).call();\n  console.log(result, 'RESULT'); // console.log(\n  //\n  // );\n  // return await drizzle.contracts.Twittor.methods.getData().call();\n};\n\nconst randoFunc = async () => {\n  console.log('>>>>>>>>', (await getData()));\n};\n\nexport default class tweets extends React.Component {\n  render() {\n    getData();\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"TEST\");\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/NewComponent.js"],"names":["React","Drizzle","options","drizzle","getData","accounts","web3","eth","getAccounts","console","log","latestTweet","contracts","Twittor","methods","getNumTweets","call","result","getEverythingTweetStruct","randoFunc","tweets","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAYC,OAAZ,CAAhB;;AACA,MAAME,OAAO,GAAG,YAAY;AAC1B,QAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,CAAaC,GAAb,CAAiBC,WAAjB,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAAC,CAAD,CAApB,EAAyB,UAAzB;AACA,QAAMM,WAAW,GAAG,MAAMR,OAAO,CAACS,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CACvBC,YADuB,CACVV,QAAQ,CAAC,CAAD,CADE,EAEvBW,IAFuB,EAA1B;AAGA,QAAMC,MAAM,GAAG,MAAMd,OAAO,CAACS,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CAClBI,wBADkB,CACOb,QAAQ,CAAC,CAAD,CADf,EACoBM,WAAW,GAAG,CADlC,EAElBK,IAFkB,EAArB;AAGAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ,EAAoB,QAApB,EAT0B,CAU1B;AACA;AACA;AACA;AACD,CAdD;;AAgBA,MAAME,SAAS,GAAG,YAAY;AAC5BV,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,GAAwB,MAAMN,OAAO,EAArC;AACD,CAFD;;AAIA,eAAe,MAAMgB,MAAN,SAAqBpB,KAAK,CAACqB,SAA3B,CAAqC;AAClDC,EAAAA,MAAM,GAAG;AACPlB,IAAAA,OAAO;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAJiD","sourcesContent":["import React from 'react';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\n\nconst drizzle = new Drizzle(options);\nconst getData = async () => {\n  const accounts = await drizzle.web3.eth.getAccounts();\n  console.log(accounts[0], 'accounts');\n  const latestTweet = await drizzle.contracts.Twittor.methods\n    .getNumTweets(accounts[0])\n    .call();\n  const result = await drizzle.contracts.Twittor.methods\n    .getEverythingTweetStruct(accounts[0], latestTweet - 1)\n    .call();\n  console.log(result, 'RESULT');\n  // console.log(\n  //\n  // );\n  // return await drizzle.contracts.Twittor.methods.getData().call();\n};\n\nconst randoFunc = async () => {\n  console.log('>>>>>>>>', await getData());\n};\n\nexport default class tweets extends React.Component {\n  render() {\n    getData();\n    return <h2>TEST</h2>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}