{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/Twittor/App/src/MyComponent.js\";\nimport React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\nexport default class tweets extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      userAddress: '',\n      numTweets: 0\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await drizzle.web3.eth.getAccounts();\n    const latestTweet = await drizzle.contracts.Twittor.methods.getNumTweets(accounts[0]).call();\n    this.setState({\n      userAddress: accounts[0],\n      numTweets: latestTweet\n    });\n  }\n\n  render() {\n    let length = this.state.numTweets;\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Test\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"TWEETS\"), React.createElement(TweetForm, {\n      contract: \"Twittor\",\n      method: \"addTweetStruct\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"allTweets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, mapArray.map((tweet, idx) => {\n      return React.createElement(SingleTweet, {\n        address: this.state.userAddress,\n        index: idx,\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }).reverse())));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/Twittor/App/src/MyComponent.js"],"names":["React","ToastContainer","ContractData","TweetForm","SingleTweet","Drizzle","options","drizzle","tweets","Component","constructor","props","state","userAddress","numTweets","componentDidMount","accounts","web3","eth","getAccounts","latestTweet","contracts","Twittor","methods","getNumTweets","call","setState","render","length","mapArray","fill","map","tweet","idx","reverse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,CAAYC,OAAZ,CAAhB;AAEA,eAAe,MAAME,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,SAAS,EAAE;AAA9B,KAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAaC,GAAb,CAAiBC,WAAjB,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMb,OAAO,CAACc,SAAR,CAAkBC,OAAlB,CAA0BC,OAA1B,CACvBC,YADuB,CACVR,QAAQ,CAAC,CAAD,CADE,EAEvBS,IAFuB,EAA1B;AAGA,SAAKC,QAAL,CAAc;AAAEb,MAAAA,WAAW,EAAEG,QAAQ,CAAC,CAAD,CAAvB;AAA4BF,MAAAA,SAAS,EAAEM;AAAvC,KAAd;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,KAAKhB,KAAL,CAAWE,SAAxB;AACA,QAAIe,QAAQ,GAAG,EAAf;;AACA,QAAID,MAAJ,EAAY;AACVC,MAAAA,QAAQ,CAACD,MAAT,GAAkBA,MAAlB;AACAC,MAAAA,QAAQ,CAACC,IAAT,CAAc,CAAd;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,SAApB;AAA8B,MAAA,MAAM,EAAC,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CACNE,GADF,CACM,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnB,aACE,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWC,WADtB;AAEE,QAAA,KAAK,EAAEoB,GAFT;AAGE,QAAA,GAAG,EAAEA,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KATF,EAUEC,OAVF,EADH,CAJF,CAHF,CADF;AAwBD;;AA9CiD","sourcesContent":["import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nconst drizzle = new Drizzle(options);\n\nexport default class tweets extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = { userAddress: '', numTweets: 0 };\n  }\n  async componentDidMount() {\n    const accounts = await drizzle.web3.eth.getAccounts();\n    const latestTweet = await drizzle.contracts.Twittor.methods\n      .getNumTweets(accounts[0])\n      .call();\n    this.setState({ userAddress: accounts[0], numTweets: latestTweet });\n  }\n\n  render() {\n    let length = this.state.numTweets;\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    return (\n      <div className=\"App\">\n        <ToastContainer />\n\n        <div>\n          <h1>Test</h1>\n          <h1>TWEETS</h1>\n          <TweetForm contract=\"Twittor\" method=\"addTweetStruct\" />\n          <div className=\"allTweets\">\n            {mapArray\n              .map((tweet, idx) => {\n                return (\n                  <SingleTweet\n                    address={this.state.userAddress}\n                    index={idx}\n                    key={idx}\n                  />\n                );\n              })\n              .reverse()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}