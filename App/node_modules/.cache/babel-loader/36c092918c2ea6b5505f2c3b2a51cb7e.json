{"ast":null,"code":"var _jsxFileName = \"/Users/tristan/Documents/blockchain/Real Twittor/App/src/App.js\";\nimport React from 'react'; // import logo from './logo.svg';\n\nimport './App.css'; // import web3 from './web3';\n// import twittor from './twittor';\n\nimport { DrizzleProvider } from \"drizzle-react\";\nimport { LoadingContainer } from \"drizzle-react-components\";\nimport { Drizzle, generateStore } from 'drizzle';\nimport \"./App.css\";\nimport Migrations from \"./contracts/Migrations.json\";\nimport Twittor from \"./contracts/Twittor.json\";\nimport drizzleOptions from \"./drizzleOptions\";\nimport MyContainer from \"./MyContainer\";\nimport store from './middleware';\nconst options = {\n  contracts: [Migrations, Twittor]\n};\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\n\nclass App extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.state ={\n  //     tweets: [],\n  //     newTweet: '',\n  //   }\n  // }\n  // async componentDidMount() {\n  //   try {\n  //     const accounts = await web3.eth.getAccounts()\n  //     const tweets = await twittor.methods.fetchUserTweets(accounts[0]).call();\n  //     if(tweets !== null ){\n  //     this.setState({tweets});\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n  // handleChange = (evt) => {\n  //   this.setState({\n  //     [evt.target.name]: evt.target.value\n  //   })\n  // }\n  // handleTweet = async (evt) => {\n  //   try {\n  //     evt.preventDefault();\n  //     //get current account logged in\n  //     const accounts = await web3.eth.getAccounts()\n  //     //send tweet out\n  //     await twittor.methods.setMessage(this.state.newTweet)\n  //       .send({from: accounts[0]})\n  //       .on('transactionHash', function(hash){\n  //         console.log(hash);\n  // })\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n  // render() {\n  //   const tweets = this.state.tweets;\n  //   return (\n  //     <div className=\"App\">\n  //       <input\n  //         name = \"newTweet\"\n  //         type = \"text\"\n  //         value = {this.state.newTweet}\n  //         onChange = {this.handleChange}\n  //       />\n  //       <button\n  //         type = \"button\"\n  //         onClick = {this.handleTweet}\n  //       > TWEET</button>\n  //       <h1> {this.state.message}</h1>\n  //       <div className = 'allTweets'>\n  //         <h1>TWEETS</h1>\n  //         {tweets.map(tweet => {\n  //           return(\n  //           <div className = 'singleTweet'>{tweet}</div>\n  //           )\n  //         })}\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  render() {\n    return React.createElement(DrizzleProvider, {\n      store: store,\n      drizzle: drizzle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(LoadingContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(MyContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tristan/Documents/blockchain/Real Twittor/App/src/App.js"],"names":["React","DrizzleProvider","LoadingContainer","Drizzle","generateStore","Migrations","Twittor","drizzleOptions","MyContainer","store","options","contracts","drizzleStore","drizzle","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP,C,CACA;AACA;;AAEA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAAQC,OAAR,EAAiBC,aAAjB,QAAqC,SAArC;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,MAAMC,OAAO,GAAG;AAACC,EAAAA,SAAS,EAAE,CAACN,UAAD,EAAaC,OAAb;AAAZ,CAAhB;AACA,MAAMM,YAAY,GAAGR,aAAa,CAACM,OAAD,CAAlC;AACA,MAAMG,OAAO,GAAG,IAAIV,OAAJ,CAAYO,OAAZ,EAAqBE,YAArB,CAAhB;;AAKA,MAAME,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAEP,KAAxB;AAA+B,MAAA,OAAO,EAAEI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAnF+B;;AAsFlC,eAAeC,GAAf","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n// import web3 from './web3';\n// import twittor from './twittor';\n\nimport { DrizzleProvider } from \"drizzle-react\";\nimport { LoadingContainer } from \"drizzle-react-components\";\nimport {Drizzle, generateStore} from 'drizzle'\nimport \"./App.css\";\n\nimport Migrations from \"./contracts/Migrations.json\";\nimport Twittor from \"./contracts/Twittor.json\";\n\nimport drizzleOptions from \"./drizzleOptions\";\nimport MyContainer from \"./MyContainer\";\nimport store from './middleware'\nconst options = {contracts: [Migrations, Twittor]};\nconst drizzleStore = generateStore(options);\nconst drizzle = new Drizzle(options, drizzleStore);\n\n\n\n\nclass App extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.state ={\n  //     tweets: [],\n  //     newTweet: '',\n  //   }\n  // }\n\n  // async componentDidMount() {\n  //   try {\n  //     const accounts = await web3.eth.getAccounts()\n  //     const tweets = await twittor.methods.fetchUserTweets(accounts[0]).call();\n  //     if(tweets !== null ){\n  //     this.setState({tweets});\n\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n   \n  // }\n\n  // handleChange = (evt) => {\n  //   this.setState({\n  //     [evt.target.name]: evt.target.value\n  //   })\n  // }\n\n  // handleTweet = async (evt) => {\n  //   try {\n  //     evt.preventDefault();\n  //     //get current account logged in\n  //     const accounts = await web3.eth.getAccounts()\n  //     //send tweet out\n  //     await twittor.methods.setMessage(this.state.newTweet)\n  //       .send({from: accounts[0]})\n  //       .on('transactionHash', function(hash){\n  //         console.log(hash);\n  // })\n      \n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n    \n  // }\n\n\n  // render() {\n  //   const tweets = this.state.tweets;\n  //   return (\n  //     <div className=\"App\">\n  //       <input\n  //         name = \"newTweet\"\n  //         type = \"text\"\n  //         value = {this.state.newTweet}\n  //         onChange = {this.handleChange}\n  //       />\n  //       <button\n  //         type = \"button\"\n  //         onClick = {this.handleTweet}\n  //       > TWEET</button>\n  //       <h1> {this.state.message}</h1>\n  //       <div className = 'allTweets'>\n  //         <h1>TWEETS</h1>\n  //         {tweets.map(tweet => {\n  //           return(\n  //           <div className = 'singleTweet'>{tweet}</div>\n  //           )\n  //         })}\n  //       </div>\n  //     </div>\n  //   );\n  // }\n \n  render() {\n    return (\n      <DrizzleProvider store={store} drizzle={drizzle}>\n        <LoadingContainer>\n          <MyContainer />\n        </LoadingContainer>\n      </DrizzleProvider>\n    );\n  }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}