{"ast":null,"code":"var _jsxFileName = \"/Users/tristan/Documents/blockchain/Real Twittor/App/src/MyComponent.js\";\nimport React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport { DrizzleContext } from \"drizzle-react\";\nconst drizzle = new Drizzle(options);\nexport default class tweets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAddress: ''\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"drizzle \", drizzle); // const accounts = await drizzle.web3.eth.getAccounts();\n    // this.setState({ userAddress: accounts[0] });\n  }\n\n  render() {\n    // let length = 0;\n    // const getNumTweetsFirstKey = Object.keys(\n    //   this.props.Twittor.getNumTweets\n    // )[1];\n    // if (this.props.Twittor.getNumTweets[getNumTweetsFirstKey]) {\n    //   length = this.props.Twittor.getNumTweets[getNumTweetsFirstKey].value;\n    // }\n    // let mapArray = [];\n    // if (length) {\n    //   mapArray.length = length;\n    //   mapArray.fill(1);\n    // }\n    console.log(\"props\", this.props);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/tristan/Documents/blockchain/Real Twittor/App/src/MyComponent.js"],"names":["React","ToastContainer","ContractData","TweetForm","SingleTweet","Drizzle","options","DrizzleContext","drizzle","tweets","Component","constructor","props","state","userAddress","componentDidMount","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,uCAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,OAAO,GAAG,IAAIH,OAAJ,CAAYC,OAAZ,CAAhB;AACA,eAAe,MAAMG,MAAN,SAAqBT,KAAK,CAACU,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,OAAxB,EADwB,CAExB;AACA;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKL,KAA1B;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAgCD;;AA3DiD","sourcesContent":["import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ContractData } from 'drizzle-react-components';\nimport TweetForm from './TweetForm';\nimport SingleTweet from './SingleTweet';\nimport { Drizzle } from 'drizzle';\nimport options from './drizzleOptions';\nimport { DrizzleContext } from \"drizzle-react\";\n\nconst drizzle = new Drizzle(options);\nexport default class tweets extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { userAddress: '' };\n  }\n  async componentDidMount() {\n    console.log(\"drizzle \", drizzle)\n    // const accounts = await drizzle.web3.eth.getAccounts();\n    // this.setState({ userAddress: accounts[0] });\n  }\n\n  render() {\n    // let length = 0;\n    // const getNumTweetsFirstKey = Object.keys(\n    //   this.props.Twittor.getNumTweets\n    // )[1];\n    // if (this.props.Twittor.getNumTweets[getNumTweetsFirstKey]) {\n    //   length = this.props.Twittor.getNumTweets[getNumTweetsFirstKey].value;\n    // }\n    // let mapArray = [];\n    // if (length) {\n    //   mapArray.length = length;\n    //   mapArray.fill(1);\n    // }\n\n    console.log(\"props\", this.props)\n\n    return (\n      <div className=\"App\">\n        {/* <ToastContainer />\n\n        <div>\n          <h1>TWEETS</h1>\n          <TweetForm contract=\"Twittor\" method=\"addTweetStruct\" />\n          <div className=\"allTweets\">\n            {mapArray\n              .map((tweet, idx) => {\n                return (\n                  <SingleTweet\n                    address={this.state.userAddress}\n                    index={idx}\n                    key={idx}\n                  />\n                );\n              })\n              .reverse()}\n          </div>\n          <div className=\"hide\">\n            {\n              <ContractData\n                contract=\"Twittor\"\n                method=\"getNumTweets\"\n                methodArgs={[this.state.userAddress]}\n              />\n            }\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}