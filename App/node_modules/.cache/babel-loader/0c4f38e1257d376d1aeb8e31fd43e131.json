{"ast":null,"code":"import web3 from './web3';\nconst address = '0x8e9364D031f1aaE780A1F36C26dD2C68DC34a6ac';\nconst abi = [{\n  \"inputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getMessageLength\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"name\": \"newMessage\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"setMessage\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getMessageByIndex\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"fetchUserTweets\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string[]\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getKeys\",\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address[]\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nconst twittor = new web3.eth.Contract(abi, address); //creates local copy of our contract that's on the blockchain\n\nexport default twittor;","map":{"version":3,"sources":["/Users/tristan/Documents/blockchain/Real Twittor/App/src/twittor.js"],"names":["web3","address","abi","twittor","eth","Contract"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,MAAMC,OAAO,GAAG,4CAAhB;AAEA,MAAMC,GAAG,GAAG,CACR;AACE,YAAU,EADZ;AAEE,aAAW,KAFb;AAGE,qBAAmB,YAHrB;AAIE,UAAQ;AAJV,CADQ,EAOR;AACE,cAAY,IADd;AAEE,YAAU,EAFZ;AAGE,UAAQ,kBAHV;AAIE,aAAW,CACT;AACE,YAAQ,EADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,aAAW,KAVb;AAWE,qBAAmB,MAXrB;AAYE,UAAQ;AAZV,CAPQ,EAqBR;AACE,cAAY,KADd;AAEE,YAAU,CACR;AACE,YAAQ,YADV;AAEE,YAAQ;AAFV,GADQ,CAFZ;AAQE,UAAQ,YARV;AASE,aAAW,EATb;AAUE,aAAW,KAVb;AAWE,qBAAmB,YAXrB;AAYE,UAAQ;AAZV,CArBQ,EAmCR;AACE,cAAY,IADd;AAEE,YAAU,CACR;AACE,YAAQ,OADV;AAEE,YAAQ;AAFV,GADQ,CAFZ;AAQE,UAAQ,mBARV;AASE,aAAW,CACT;AACE,YAAQ,EADV;AAEE,YAAQ;AAFV,GADS,CATb;AAeE,aAAW,KAfb;AAgBE,qBAAmB,MAhBrB;AAiBE,UAAQ;AAjBV,CAnCQ,EAsDR;AACE,cAAY,IADd;AAEE,YAAU,CACR;AACE,YAAQ,MADV;AAEE,YAAQ;AAFV,GADQ,CAFZ;AAQE,UAAQ,iBARV;AASE,aAAW,CACT;AACE,YAAQ,EADV;AAEE,YAAQ;AAFV,GADS,CATb;AAeE,aAAW,KAfb;AAgBE,qBAAmB,MAhBrB;AAiBE,UAAQ;AAjBV,CAtDQ,EAyER;AACE,cAAY,IADd;AAEE,YAAU,EAFZ;AAGE,UAAQ,SAHV;AAIE,aAAW,CACT;AACE,YAAQ,EADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,aAAW,KAVb;AAWE,qBAAmB,MAXrB;AAYE,UAAQ;AAZV,CAzEQ,CAAZ;AAyFE,MAAMC,OAAO,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CAAsBH,GAAtB,EAA2BD,OAA3B,CAAhB,C,CACF;;AACA,eAAeE,OAAf","sourcesContent":["import web3 from './web3'\n\nconst address = '0x8e9364D031f1aaE780A1F36C26dD2C68DC34a6ac';\n\nconst abi = [\n    {\n      \"inputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"getMessageLength\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"name\": \"newMessage\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"setMessage\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getMessageByIndex\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"name\": \"user\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"fetchUserTweets\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"string[]\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"getKeys\",\n      \"outputs\": [\n        {\n          \"name\": \"\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]\n\n  const twittor = new web3.eth.Contract(abi, address);\n//creates local copy of our contract that's on the blockchain\nexport default twittor;"]},"metadata":{},"sourceType":"module"}