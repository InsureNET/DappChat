{"ast":null,"code":"import { toast } from 'react-toastify';\nimport { generateStore, EventActions } from 'drizzle';\nimport drizzleOptions from '../drizzleOptions';\n\nconst contractEventNotifier = store => next => action => {\n  console.log(action, 'ACTION');\n  let toastId; // if (action.type === 'BLOCK_PROCESSING') {\n  //   toastId = toast.info('ðŸ¦„ Wow so easy!', {\n  //     position: 'top-right',\n  //     autoClose: false,\n  //   });\n  // }\n\n  if (action.type === 'CONTRACT_SYNCED') {\n    const contract = action.name;\n    const contractEvent = action.event.event;\n    const message = action.event.returnValues._message;\n    const display = \"\".concat(contract, \"(\").concat(contractEvent, \"): \").concat(message);\n    toast.update(toastId, {\n      render: display,\n      type: toast.TYPE.SUCCESS,\n      autoclose: 5000,\n      className: 'rotateY animated'\n    });\n  }\n\n  return next(action);\n};\n\nconst appMiddlewares = [contractEventNotifier];\nconst store = generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false // enable ReduxDevTools!\n\n}); // Use the store with DrizzleProvider\n\nexport default store;","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/middleware/index.js"],"names":["toast","generateStore","EventActions","drizzleOptions","contractEventNotifier","store","next","action","console","log","toastId","type","contract","name","contractEvent","event","message","returnValues","_message","display","update","render","TYPE","SUCCESS","autoclose","className","appMiddlewares","disableReduxDevTools"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,SAA5C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,qBAAqB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,QAApB;AACA,MAAIG,OAAJ,CAFuD,CAIvD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIH,MAAM,CAACI,IAAP,KAAgB,iBAApB,EAAuC;AACrC,UAAMC,QAAQ,GAAGL,MAAM,CAACM,IAAxB;AACA,UAAMC,aAAa,GAAGP,MAAM,CAACQ,KAAP,CAAaA,KAAnC;AACA,UAAMC,OAAO,GAAGT,MAAM,CAACQ,KAAP,CAAaE,YAAb,CAA0BC,QAA1C;AACA,UAAMC,OAAO,aAAMP,QAAN,cAAkBE,aAAlB,gBAAqCE,OAArC,CAAb;AAEAhB,IAAAA,KAAK,CAACoB,MAAN,CAAaV,OAAb,EAAsB;AACpBW,MAAAA,MAAM,EAAEF,OADY;AAEpBR,MAAAA,IAAI,EAAEX,KAAK,CAACsB,IAAN,CAAWC,OAFG;AAGpBC,MAAAA,SAAS,EAAE,IAHS;AAIpBC,MAAAA,SAAS,EAAE;AAJS,KAAtB;AAMD;;AACD,SAAOnB,IAAI,CAACC,MAAD,CAAX;AACD,CAzBD;;AA2BA,MAAMmB,cAAc,GAAG,CAACtB,qBAAD,CAAvB;AAEA,MAAMC,KAAK,GAAGJ,aAAa,CAAC;AAC1BE,EAAAA,cAD0B;AAE1BuB,EAAAA,cAF0B;AAG1BC,EAAAA,oBAAoB,EAAE,KAHI,CAGG;;AAHH,CAAD,CAA3B,C,CAMA;;AACA,eAAetB,KAAf","sourcesContent":["import { toast } from 'react-toastify';\nimport { generateStore, EventActions } from 'drizzle';\nimport drizzleOptions from '../drizzleOptions';\n\nconst contractEventNotifier = store => next => action => {\n  console.log(action, 'ACTION');\n  let toastId;\n\n  // if (action.type === 'BLOCK_PROCESSING') {\n  //   toastId = toast.info('ðŸ¦„ Wow so easy!', {\n  //     position: 'top-right',\n  //     autoClose: false,\n  //   });\n  // }\n\n  if (action.type === 'CONTRACT_SYNCED') {\n    const contract = action.name;\n    const contractEvent = action.event.event;\n    const message = action.event.returnValues._message;\n    const display = `${contract}(${contractEvent}): ${message}`;\n\n    toast.update(toastId, {\n      render: display,\n      type: toast.TYPE.SUCCESS,\n      autoclose: 5000,\n      className: 'rotateY animated',\n    });\n  }\n  return next(action);\n};\n\nconst appMiddlewares = [contractEventNotifier];\n\nconst store = generateStore({\n  drizzleOptions,\n  appMiddlewares,\n  disableReduxDevTools: false, // enable ReduxDevTools!\n});\n\n// Use the store with DrizzleProvider\nexport default store;\n"]},"metadata":{},"sourceType":"module"}