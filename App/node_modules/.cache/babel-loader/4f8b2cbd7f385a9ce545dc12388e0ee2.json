{"ast":null,"code":"var _jsxFileName = \"/Users/AlexMok/drizzletest/Twittor/App/src/Channel.js\";\nimport React from 'react';\nimport ChannelMessage from './ChannelMessage';\nimport { toast, Flip } from 'react-toastify';\nimport { Button, Form, Message, Accordion, AccordionContent, AccordionTitle, Icon, Loader } from 'semantic-ui-react';\nexport default class Channel extends React.Component {\n  constructor(props) {\n    super();\n\n    this.getData = async (address, index) => {\n      const result = await this.props.drizzle.contracts.Stealth.methods.getChannelData(this.props.channelIndex).call();\n      return result;\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      toast.info('Processing message...', {\n        position: 'top-right',\n        autoClose: 10000,\n        transition: Flip\n      });\n\n      try {\n        await this.props.drizzle.contracts.Stealth.methods.addMessage(this.props.channelIndex, this.state.message).send({\n          from: this.props.address\n        });\n      } catch (error) {\n        toast.dismiss();\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        message: ''\n      });\n    };\n\n    this.handleClick = (e, titleProps) => {\n      const index = titleProps.index;\n      const activeIndex = this.state.activeIndex;\n      const newIndex = activeIndex === index ? -1 : index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    };\n\n    this.state = {\n      message: '',\n      activeIndex: false,\n      loading: false,\n      errorMessage: '',\n      displayReply: false,\n      loadingData: true\n    };\n  }\n\n  async componentDidMount() {\n    const channelData = await this.getData(this.props.address, this.props.index);\n    this.setState(channelData);\n    console.log(this.state);\n  }\n\n  render() {\n    const drizzleState = this.props.drizzleState;\n    let length = 0;\n    let identifier; // //Gets list of all single tweet keys\n    // console.log(drizzleState.contracts.Stealth.getChannelData);\n    // const keys = Object.keys(drizzleState.contracts.Stealth.getNumReplies);\n    // //Searches through the getNumReply arguments, matches the index, and saves indentifier\n    // if (keys.length) {\n    //   for (let i = 0; i < keys.length; i++) {\n    //     if (\n    //       drizzleState.contracts.Stealth.getNumReplies[keys[i]].args[1] ===\n    //       this.props.index\n    //     ) {\n    //       identifier = keys[i];\n    //       break;\n    //     }\n    //   }\n    //   //Finds the newly updated num replies\n    //   if (identifier) {\n    //     length = drizzleState.contracts.Stealth.getNumReplies[identifier].value;\n    //   }\n    // }\n\n    let mapArray = [];\n\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n\n    const displayReply = this.state.displayReply; // console.log(this.props, 'PROPS');\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Block Num:\", ' ', this.state[2] ? this.state[2] : React.createElement(Loader, {\n      size: \"mini\",\n      active: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Tweet:\", ' ', this.state[0] ? this.state[0] : React.createElement(Loader, {\n      size: \"mini\",\n      active: true,\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Replies: \", length), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      fluid: true,\n      styled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      error: !!this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: \"message\",\n      name: \"message\",\n      value: this.state.message,\n      placeholder: \"Message\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Button, {\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Message\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(AccordionTitle, {\n      active: displayReply,\n      onClick: () => {\n        this.setState({\n          displayReply: !displayReply\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), \"Replies\"), mapArray.map((tweet, idx) => {\n      return React.createElement(AccordionContent, {\n        active: displayReply,\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(ChannelMessage, {\n        address: this.props.address,\n        index: this.props.index,\n        replyIndex: idx,\n        drizzle: this.props.drizzle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }));\n    }).reverse(), React.createElement(AccordionContent, {\n      active: displayReply && mapArray.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"No replies yet\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/AlexMok/drizzletest/Twittor/App/src/Channel.js"],"names":["React","ChannelMessage","toast","Flip","Button","Form","Message","Accordion","AccordionContent","AccordionTitle","Icon","Loader","Channel","Component","constructor","props","getData","address","index","result","drizzle","contracts","Stealth","methods","getChannelData","channelIndex","call","handleInputChange","event","setState","target","name","value","console","log","state","handleSubmit","preventDefault","loading","info","position","autoClose","transition","addMessage","message","send","from","error","dismiss","errorMessage","handleClick","e","titleProps","activeIndex","newIndex","displayReply","loadingData","componentDidMount","channelData","render","drizzleState","length","identifier","mapArray","fill","map","tweet","idx","reverse"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ChannelMessage from './ChannelMessage';\nimport { toast, Flip } from 'react-toastify';\nimport {\n  Button,\n  Form,\n  Message,\n  Accordion,\n  AccordionContent,\n  AccordionTitle,\n  Icon,\n  Loader,\n} from 'semantic-ui-react';\n\nexport default class Channel extends React.Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      message: '',\n      activeIndex: false,\n      loading: false,\n      errorMessage: '',\n      displayReply: false,\n      loadingData: true,\n    };\n  }\n  async componentDidMount() {\n    const channelData = await this.getData(\n      this.props.address,\n      this.props.index\n    );\n    this.setState(channelData);\n    console.log(this.state);\n  }\n\n  getData = async (address, index) => {\n    const result = await this.props.drizzle.contracts.Stealth.methods\n      .getChannelData(this.props.channelIndex)\n      .call();\n    return result;\n  };\n\n  handleInputChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n    console.log(this.state);\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    this.setState({ loading: true });\n\n    toast.info('Processing message...', {\n      position: 'top-right',\n      autoClose: 10000,\n      transition: Flip,\n    });\n\n    try {\n      await this.props.drizzle.contracts.Stealth.methods\n        .addMessage(this.props.channelIndex, this.state.message)\n        .send({ from: this.props.address });\n    } catch (error) {\n      toast.dismiss();\n      this.setState({ errorMessage: error.message });\n    }\n    this.setState({ loading: false, message: '' });\n  };\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  };\n\n  render() {\n    const { drizzleState } = this.props;\n    let length = 0;\n    let identifier;\n\n    // //Gets list of all single tweet keys\n    // console.log(drizzleState.contracts.Stealth.getChannelData);\n    // const keys = Object.keys(drizzleState.contracts.Stealth.getNumReplies);\n\n    // //Searches through the getNumReply arguments, matches the index, and saves indentifier\n    // if (keys.length) {\n    //   for (let i = 0; i < keys.length; i++) {\n    //     if (\n    //       drizzleState.contracts.Stealth.getNumReplies[keys[i]].args[1] ===\n    //       this.props.index\n    //     ) {\n    //       identifier = keys[i];\n    //       break;\n    //     }\n    //   }\n\n    //   //Finds the newly updated num replies\n    //   if (identifier) {\n    //     length = drizzleState.contracts.Stealth.getNumReplies[identifier].value;\n    //   }\n    // }\n    let mapArray = [];\n    if (length) {\n      mapArray.length = length;\n      mapArray.fill(1);\n    }\n    const { displayReply } = this.state;\n    // console.log(this.props, 'PROPS');\n    return (\n      <div>\n        <div>\n          Block Num:{' '}\n          {this.state[2] ? this.state[2] : <Loader size=\"mini\" active inline />}\n          {/* (this.setState({ loadingData: false }), */}\n        </div>\n        <div>\n          Tweet:{' '}\n          {this.state[0] ? this.state[0] : <Loader size=\"mini\" active inline />}\n        </div>\n        <p>Replies: {length}</p>\n\n        {/* Should move to new component */}\n        <div>\n          <Accordion fluid styled>\n            <div>\n              <Form\n                onSubmit={this.handleSubmit}\n                error={!!this.state.errorMessage}\n              >\n                <input\n                  key=\"message\"\n                  name=\"message\"\n                  value={this.state.message}\n                  placeholder=\"Message\"\n                  onChange={this.handleInputChange}\n                />\n                <Message\n                  error\n                  header=\"Oops!\"\n                  content={this.state.errorMessage}\n                />\n\n                <Button loading={this.state.loading}>Message</Button>\n              </Form>\n              <div>\n                <AccordionTitle\n                  active={displayReply}\n                  onClick={() => {\n                    this.setState({\n                      displayReply: !displayReply,\n                    });\n                  }}\n                >\n                  <Icon name=\"dropdown\" />\n                  Replies\n                </AccordionTitle>\n\n                {mapArray\n                  .map((tweet, idx) => {\n                    return (\n                      <AccordionContent active={displayReply} key={idx}>\n                        <ChannelMessage\n                          address={this.props.address}\n                          index={this.props.index}\n                          replyIndex={idx}\n                          drizzle={this.props.drizzle}\n                        />\n                      </AccordionContent>\n                    );\n                  })\n                  .reverse()}\n                <AccordionContent\n                  active={displayReply && mapArray.length === 0}\n                >\n                  <h2>No replies yet</h2>\n                </AccordionContent>\n              </div>\n            </div>\n          </Accordion>\n        </div>\n        {/* Should move to new component */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}